{
  "__name__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__doc__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__package__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__loader__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__spec__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__file__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__cached__": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "__builtins__": {
    "__name__": "builtins",
    "__doc__": "Built-in functions, types, exceptions, and other objects.\n\nThis module provides direct access to all 'built-in'\nidentifiers of Python; for example, builtins.len is\nthe full name for the built-in function len().\n\nThis module is not normally accessed explicitly by most\napplications, but can be useful in modules that provide\nobjects with the same name as a built-in value, but in\nwhich the built-in of that name is also needed.",
    "__package__": "",
    "__loader__": "<class '_frozen_importlib.BuiltinImporter'>",
    "__spec__": "ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in')",
    "__build_class__": "<built-in function __build_class__>",
    "__import__": "<built-in function __import__>",
    "abs": "<built-in function abs>",
    "all": "<built-in function all>",
    "any": "<built-in function any>",
    "ascii": "<built-in function ascii>",
    "bin": "<built-in function bin>",
    "breakpoint": "<built-in function breakpoint>",
    "callable": "<built-in function callable>",
    "chr": "<built-in function chr>",
    "compile": "<built-in function compile>",
    "delattr": "<built-in function delattr>",
    "dir": "<built-in function dir>",
    "divmod": "<built-in function divmod>",
    "eval": "<built-in function eval>",
    "exec": "<built-in function exec>",
    "format": "<built-in function format>",
    "getattr": "<built-in function getattr>",
    "globals": "<built-in function globals>",
    "hasattr": "<built-in function hasattr>",
    "hash": "<built-in function hash>",
    "hex": "<built-in function hex>",
    "id": "<built-in function id>",
    "input": "<built-in function input>",
    "isinstance": "<built-in function isinstance>",
    "issubclass": "<built-in function issubclass>",
    "iter": "<built-in function iter>",
    "aiter": "<built-in function aiter>",
    "len": "<built-in function len>",
    "locals": "<built-in function locals>",
    "max": "<built-in function max>",
    "min": "<built-in function min>",
    "next": "<built-in function next>",
    "anext": "<built-in function anext>",
    "oct": "<built-in function oct>",
    "ord": "<built-in function ord>",
    "pow": "<built-in function pow>",
    "print": "<built-in function print>",
    "repr": "<built-in function repr>",
    "round": "<built-in function round>",
    "setattr": "<built-in function setattr>",
    "sorted": "<built-in function sorted>",
    "sum": "<built-in function sum>",
    "vars": "<built-in function vars>",
    "None": null,
    "Ellipsis": "Ellipsis",
    "NotImplemented": "NotImplemented",
    "False": false,
    "True": true,
    "bool": "<class 'bool'>",
    "memoryview": "<class 'memoryview'>",
    "bytearray": "<class 'bytearray'>",
    "bytes": "<class 'bytes'>",
    "classmethod": "<class 'classmethod'>",
    "complex": "<class 'complex'>",
    "dict": "<class 'dict'>",
    "enumerate": "<class 'enumerate'>",
    "filter": "<class 'filter'>",
    "float": "<class 'float'>",
    "frozenset": "<class 'frozenset'>",
    "property": "<class 'property'>",
    "int": "<class 'int'>",
    "list": "<class 'list'>",
    "map": "<class 'map'>",
    "object": "<class 'object'>",
    "range": "<class 'range'>",
    "reversed": "<class 'reversed'>",
    "set": "<class 'set'>",
    "slice": "<class 'slice'>",
    "staticmethod": "<class 'staticmethod'>",
    "str": "<class 'str'>",
    "super": "<class 'super'>",
    "tuple": "<class 'tuple'>",
    "type": "<class 'type'>",
    "zip": "<class 'zip'>",
    "__debug__": true,
    "BaseException": "<class 'BaseException'>",
    "BaseExceptionGroup": "<class 'BaseExceptionGroup'>",
    "Exception": "<class 'Exception'>",
    "GeneratorExit": "<class 'GeneratorExit'>",
    "KeyboardInterrupt": "<class 'KeyboardInterrupt'>",
    "SystemExit": "<class 'SystemExit'>",
    "ArithmeticError": "<class 'ArithmeticError'>",
    "AssertionError": "<class 'AssertionError'>",
    "AttributeError": "<class 'AttributeError'>",
    "BufferError": "<class 'BufferError'>",
    "EOFError": "<class 'EOFError'>",
    "ImportError": "<class 'ImportError'>",
    "LookupError": "<class 'LookupError'>",
    "MemoryError": "<class 'MemoryError'>",
    "NameError": "<class 'NameError'>",
    "OSError": "<class 'OSError'>",
    "ReferenceError": "<class 'ReferenceError'>",
    "RuntimeError": "<class 'RuntimeError'>",
    "StopAsyncIteration": "<class 'StopAsyncIteration'>",
    "StopIteration": "<class 'StopIteration'>",
    "SyntaxError": "<class 'SyntaxError'>",
    "SystemError": "<class 'SystemError'>",
    "TypeError": "<class 'TypeError'>",
    "ValueError": "<class 'ValueError'>",
    "Warning": "<class 'Warning'>",
    "FloatingPointError": "<class 'FloatingPointError'>",
    "OverflowError": "<class 'OverflowError'>",
    "ZeroDivisionError": "<class 'ZeroDivisionError'>",
    "BytesWarning": "<class 'BytesWarning'>",
    "DeprecationWarning": "<class 'DeprecationWarning'>",
    "EncodingWarning": "<class 'EncodingWarning'>",
    "FutureWarning": "<class 'FutureWarning'>",
    "ImportWarning": "<class 'ImportWarning'>",
    "PendingDeprecationWarning": "<class 'PendingDeprecationWarning'>",
    "ResourceWarning": "<class 'ResourceWarning'>",
    "RuntimeWarning": "<class 'RuntimeWarning'>",
    "SyntaxWarning": "<class 'SyntaxWarning'>",
    "UnicodeWarning": "<class 'UnicodeWarning'>",
    "UserWarning": "<class 'UserWarning'>",
    "BlockingIOError": "<class 'BlockingIOError'>",
    "ChildProcessError": "<class 'ChildProcessError'>",
    "ConnectionError": "<class 'ConnectionError'>",
    "FileExistsError": "<class 'FileExistsError'>",
    "FileNotFoundError": "<class 'FileNotFoundError'>",
    "InterruptedError": "<class 'InterruptedError'>",
    "IsADirectoryError": "<class 'IsADirectoryError'>",
    "NotADirectoryError": "<class 'NotADirectoryError'>",
    "PermissionError": "<class 'PermissionError'>",
    "ProcessLookupError": "<class 'ProcessLookupError'>",
    "TimeoutError": "<class 'TimeoutError'>",
    "IndentationError": "<class 'IndentationError'>",
    "IndexError": "<class 'IndexError'>",
    "KeyError": "<class 'KeyError'>",
    "ModuleNotFoundError": "<class 'ModuleNotFoundError'>",
    "NotImplementedError": "<class 'NotImplementedError'>",
    "RecursionError": "<class 'RecursionError'>",
    "UnboundLocalError": "<class 'UnboundLocalError'>",
    "UnicodeError": "<class 'UnicodeError'>",
    "BrokenPipeError": "<class 'BrokenPipeError'>",
    "ConnectionAbortedError": "<class 'ConnectionAbortedError'>",
    "ConnectionRefusedError": "<class 'ConnectionRefusedError'>",
    "ConnectionResetError": "<class 'ConnectionResetError'>",
    "TabError": "<class 'TabError'>",
    "UnicodeDecodeError": "<class 'UnicodeDecodeError'>",
    "UnicodeEncodeError": "<class 'UnicodeEncodeError'>",
    "UnicodeTranslateError": "<class 'UnicodeTranslateError'>",
    "ExceptionGroup": "<class 'ExceptionGroup'>",
    "EnvironmentError": "<class 'OSError'>",
    "IOError": "<class 'OSError'>",
    "WindowsError": "<class 'OSError'>",
    "open": "<built-in function open>",
    "quit": "Use quit() or Ctrl-Z plus Return to exit",
    "exit": "Use exit() or Ctrl-Z plus Return to exit",
    "copyright": "Copyright (c) 2001-2023 Python Software Foundation.\nAll Rights Reserved.\n\nCopyright (c) 2000 BeOpen.com.\nAll Rights Reserved.\n\nCopyright (c) 1995-2001 Corporation for National Research Initiatives.\nAll Rights Reserved.\n\nCopyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\nAll Rights Reserved.",
    "credits": "    Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n    for supporting Python development.  See www.python.org for more information.",
    "license": "MIT License\n\nCopyright (c) 2025 Logan Luna\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
    "help": "Type help() for interactive help, or help(object) for help about object.",
    "__pybind11_internals_v4_mingw_libstdcpp_cxxabi1014__": "<capsule object NULL at 0x000001E4172CCDB0>",
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "torch": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "EXPERIMENT_NAME_BASE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "DEVICE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "DATA_ROOT": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "TRAIN_SUBSET_FRACTION": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "BATCH_SIZE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "EPOCHS": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "LEARNING_RATE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "VALIDATE_EVERY_EPOCH_FACTOR": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "VISUALIZATION_SAMPLES": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "OVERFIT": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "OVERFIT_N_SAMPLES": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "NUM_WORKERS": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "PIN_MEMORY": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "PERSISTENT_WORKERS": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "PREFETCH_FACTOR": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "RESULTS_BASE_DIR": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "OPTIMIZERS": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "RUNS_PER_OPTIMIZER": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "SCHEDULER_PARAMS": {
    "AdamW": {
      "scheduler": "CosineAnnealingLR",
      "params": {}
    },
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "LOSS_PLOT_TITLE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "IOU_PLOT_TITLE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "LOSS_PLOT_YLABEL": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "IOU_PLOT_YLABEL": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "EXPERIMENT_CONFIGURATIONS": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "name": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "MODEL_TYPE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "MODEL_ARCHITECTURE": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "SEQ_LEN": {
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  },
  "optimizer_params": {
    "AdamW": {
      "scheduler": "CosineAnnealingLR",
      "params": {}
    },
    "experiment_title": "uav_detection_v3_single_frame_default_resnet18",
    "epochs": 50,
    "num_runs": 1
  }
}